version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: scheduling-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: scheduling_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mock-calendar:
    build:
      context: ./mock-apis
      dockerfile: Dockerfile.calendar
    container_name: mock-calendar-api
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      FAILURE_RATE: 0.1  # 10% failure rate for testing resilience
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  mock-crm:
    build:
      context: ./mock-apis
      dockerfile: Dockerfile.crm
    container_name: mock-crm-webhook
    ports:
      - "3002:3002"
    environment:
      PORT: 3002
      FAILURE_RATE: 0.3  # 30% failure rate to test retry logic
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  mock-auth:
    build:
      context: ./mock-apis
      dockerfile: Dockerfile.auth
    container_name: mock-auth-service
    ports:
      - "3003:3003"
    environment:
      PORT: 3003
      VALID_API_KEYS: "test-key-123,dev-key-456,prod-key-789"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: scheduling-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3


  coach-assignment-server:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: coach-assignment-server
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - mock-calendar
      - mock-crm
      - mock-auth
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: scheduling-network
